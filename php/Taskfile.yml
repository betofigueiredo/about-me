version: "3"

dotenv: [".env", "{{.ENV}}/.env", "{{.HOME}}/.env"]

tasks:
  welcome-print:
    cmds:
      - cmd: echo ""
      - cmd: echo "	██████╗ ███████╗████████╗ ██████╗  "
      - cmd: echo "	██╔══██╗██╔════╝╚══██╔══╝██╔═══██╗ "
      - cmd: echo "	██████╔╝█████╗     ██║   ██║   ██║ "
      - cmd: echo "	██╔══██╗██╔══╝     ██║   ██║   ██║ "
      - cmd: echo "	██████╔╝███████╗   ██║   ╚██████╔╝ "
      - cmd: echo "	╚═════╝ ╚══════╝   ╚═╝    ╚═════╝  "
      - cmd: echo "	----------------------------------"
      - cmd: echo ""
    silent: true

  default:
    deps: [welcome-print]
    cmds:
      - task -l
    silent: true

  up:
    desc: Starts development mode
    cmds:
      - google-chrome-stable http://172.18.0.2
      - docker compose up

  down:
    dir: "{{.USER_WORKING_DIR}}"
    desc: Stop development mode
    cmds:
      - docker compose down

  sync-posts:
    desc: Sync all posts (see summary)
    summary: |
      Sync all posts
      - Create php posts files from md files
      - Create posts.php constants from posts folder
    dir: scripts
    deps: [md-to-php]
    cmds:
      - uv run create_posts_list.py

  md-to-php:
    internal: true
    desc: Create php files from md files
    dir: scripts
    cmds:
      - rm -rf ../src/posts
      - mkdir ../src/posts
      - uv run create_posts_php_files.py

  encrypt-envs:
    desc: Encrypt '.env' file
    dir: scripts
    cmds:
      - uv run encrypt_envs.py
    preconditions:
      - test -f .env

  decrypt-envs:
    desc: Decrypt '.env.encrypted' file
    dir: scripts
    cmds:
      - uv run decrypt_envs.py
    preconditions:
      - test -f .env.encrypted

  build-assets:
    desc: Rebuilds the assets with a new hash
    vars:
      DYNAMIC_HASH:
        sh: uuidgen | sed 's/[-]//g' | head -c 10
    cmds:
      - cp -a ./src/assets ./src/assets-backup
      - rm -rf ./src/assets
      - mkdir ./src/assets
      - grep -rl 'fonts-[a-zA-Z0-9]\{10\}\.css' ./src/includes/css.php | xargs sed -i 's/fonts-[a-zA-Z0-9]\{10\}\.css/fonts-{{.DYNAMIC_HASH}}.css/g'
      - grep -rl 'globals-[a-zA-Z0-9]\{10\}\.css' ./src/includes/css.php | xargs sed -i 's/globals-[a-zA-Z0-9]\{10\}\.css/globals-{{.DYNAMIC_HASH}}.css/g'
      - find ./src/assets-backup -regextype sed -regex ".*/fonts-[a-zA-Z0-9]\{10\}\.css" -exec cp {} ./src/assets/fonts-{{.DYNAMIC_HASH}}.css \;
      - find ./src/assets-backup -regextype sed -regex ".*/globals-[a-zA-Z0-9]\{10\}\.css" -exec cp {} ./src/assets/globals-{{.DYNAMIC_HASH}}.css \;
      - rm -rf ./src/assets-backup

  deploy:
    desc: Deploy to server
    cmds:
      - make check-envs
      - rsync -azP --delete src/ {{.SSH_USER}}@{{.SSH_HOST}}:{{.SSH_FOLDER}};
    preconditions:
      - test -f .env
